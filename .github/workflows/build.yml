name: build

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

# 古い実行を自動キャンセル（無駄な並列を避ける）
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cmake:
    name: ${{ matrix.os }} | ${{ matrix.build_type }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            triplet: x64-windows
            build_type: Release
          - os: macos-14        # Apple Silicon
            triplet: arm64-osx
            build_type: Release

    # vcpkg を Release のみ & GHAキャッシュ使用に
    env:
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.triplet }}
      VCPKG_BUILD_TYPE: release
      VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get CMake + Ninja
        uses: lukka/get-cmake@latest

      # Qt は vcpkg に統一するため、install-qt-action は使わない

      - name: Setup vcpkg (manifest)
        uses: lukka/run-vcpkg@v11
        with:
          # OS・triplet・vcpkg.jsonの変更でキャッシュを分ける
          appendedCacheKey: ${{ runner.os }}-${{ matrix.triplet }}-${{ hashFiles('vcpkg.json') }}

      - name: Configure (CMake + Ninja)
        run: >
          cmake -S . -B build
          -G Ninja
          -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake"

      # Ninja は単一構成なので --config は不要
      - name: Build
        run: cmake --build build

      # 成果物（任意）
      - name: Upload build artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-${{ matrix.build_type }}-binaries
          path: |
            build/**
            !build/**/CMakeFiles/**
            !build/**/Testing/**
